let userPicks = [];
userPicks[0] = "ㅁㅁ"
userPicks[1] = "조아/레오"
userPicks[2] = "슈바"
userPicks[3] = "튜쁘"
userPicks[4] = "질러"
userPicks[5] = "퓨퓨"
userPicks[6] = "밐타"
userPicks[7] = "율린"
userPicks[8] = "슬"
userPicks[9] = "규"
userPicks[10] = "대영"
userPicks[11] = "숭찌"
userPicks[12] = "바구"
userPicks[13] = "숙"
userPicks[14] = "랄라"
const NAME = 0,
    DURATION = 1,
    START_TIME = 2,
    END_TIME = 3;
let numOfThemas, numOfUsers, userSelectTimeInfor = [],
    arrStartTimes = [],
    arrMinutes = ["00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55"],
    colorRefer = ["#324856", "#4a746a", "#d18237", "#6a92cc", "#706fab", "#50293c", "#859f3c", "#12406a", "#efb730", "#030305", "#b9cd74"],
    selectedThemaColor = [];
for (let idx = 9; idx < 23; idx++) arrMinutes.forEach(e => {
    arrStartTimes.push("" + idx + ":" + e)
});
let themaInfor = [];

function funcDrawThemaInforTable() {
    numOfThemas = Number(document.getElementById("inputNumOfThemas").value), selectedThemaColor = [];
    for (let e = 0; e < numOfThemas; e++) selectedThemaColor[e] = e;
    numOfUsers = Number(document.getElementById("inputNumOfUsers").value);
    let t = document.getElementById("tblThemaInfor");
    for (; t.childElementCount > 0;) t.removeChild(t.childNodes[0]);
    let r = document.createElement("tr");
    r.innerHTML = "<th rowspan>테마명</th><th >길이(분)</th><th colspan='10'>테마시간</th><th rowspan='4' valign='middle'>&nbsp&nbsp&nbsp&nbsp<button onclick='funcDrawUserInputTable()'>그리기</button></th>", t.appendChild(r);
    for (let n = 0; n < numOfThemas; n++) {
        let l = document.createElement("tr");
        l.id = "tr-" + n;
        let o = document.createElement("td"),
            a = document.createElement("input");
        a.value = "thema_" + n, a.size = 5, a.id = "themaName" + n, a.onchange = function() {
            funcDrawUserInputTable()
        }, o.appendChild(a), l.appendChild(o);
        let s = document.createElement("td"),
            m = document.createElement("input");
        m.value = 60, m.size = 1, m.id = "themaDuration" + n, m.onchange = function() {
            funcDrawUserInputTable()
        }, s.appendChild(m), l.appendChild(s);
        let i = document.createElement("td"),
            u = document.createElement("select");
        u.id = "startTime-" + n + "-0", u.onchange = function() {
            funcUpdateThemaInfor(), funcDrawUserInputTable(), funcDraw()
        }, u.size = 1, arrStartTimes.forEach(e => {
            let t = document.createElement("option");
            t.innerHTML = e, u.appendChild(t)
        }), i.appendChild(u), l.appendChild(i);
        let f = document.createElement("td"),
            c = document.createElement("button");
        c.id = "btn" + n, c.innerHTML = "추가", c.onclick = function() {
            funcAddTime()
        }, f.appendChild(c), l.appendChild(f), t.appendChild(l)
    }
}

function jhGetTime(e, t) {
    return new Date(2021, 0, 1, e, t)
}

function jhAddMinutes(e, t) {
    let r = new Date;
    return r.setTime(e.getTime() + 6e4 * t), r
}

function jhOverlapTime(e, t) {
    return !(e[1] <= t[0]) && !(t[1] <= e[0])
}

function funcUpdateThemaInfor() {
    themaInfor = [];
    for (let e = 0; e < numOfThemas; e++) {
        let t = {};
        t[0] = document.getElementById("themaName" + e).value, t[1] = document.getElementById("themaDuration" + e).value, t[2] = [], t[3] = [];
        for (let r = 0; r < document.getElementById("tr-" + e).childElementCount - 3; r++) {
            let n = document.getElementById("tr-" + e).children[2 + r].children[0].value.split(":");
            t[2].push(jhGetTime(n[0], n[1])), t[3].push(jhAddMinutes(t[2][r], t[1]))
        }
        themaInfor.push(t)
    }
}

function funcDrawUserInputTable() {
    funcUpdateThemaInfor();
    let e = document.getElementById("tblUserInput");
    for (; e.childElementCount > 0;) e.removeChild(e.childNodes[0]);
    let t = document.createElement("tr");
    t.appendChild(document.createElement("th"));
    for (let r = 0; r < numOfUsers; r++) {
        let n = document.createElement("th"),
            l = document.createElement("input");
        l.id = "userName" + r, l.value = "user_" + "abcdefghijklmnopqrstuvwxyz" [r], l.size = 2, l.style.backgroundColor = "transparent", l.style.border = "0px", l.onchange = function() {
            funcDraw()
        }, n.appendChild(l), t.appendChild(n)
    }
    e.appendChild(t);
    for (let o = 0; o < numOfThemas; o++) {
        let a = document.createElement("tr"),
            s = document.createElement("td");
        s.innerHTML = document.getElementById("themaName" + o).value, a.appendChild(s);
        for (let m = 0; m < numOfUsers; m++) {
            let i = document.createElement("td"),
                u = document.createElement("select");
            u.id = "sltThema-" + o + "-user-" + m, u.onchange = function() {
                funcDraw()
            };
            let f = document.createElement("option");
            f.innerHTML = "-", u.appendChild(f);
            for (let c = 0; c < document.getElementById("tr-" + o).childElementCount - 3; c++) {
                let h = document.createElement("option");
                h.innerHTML = document.getElementById("tr-" + o).children[2 + c].children[0].value, u.appendChild(h)
            }
            i.appendChild(u), a.appendChild(i)
        }
        e.appendChild(a)
    }
    funcDraw()
}

function funcAddTime(e) {
    void 0 == e && (e = event.target);
    let t = e.parentElement,
        r = t.parentElement,
        n = document.createElement("select");
    n.id = "startTime-" + r.id.split("-")[1] + "-" + (r.childElementCount - 3), n.onchange = function() {
        funcUpdateThemaInfor(), funcDrawUserInputTable(), funcDraw()
    }, n.size = 1, arrStartTimes.forEach(e => {
        let t = document.createElement("option");
        t.innerHTML = e, n.appendChild(t)
    }), t.appendChild(n);
    let l = document.createElement("td");
    l.appendChild(e), r.appendChild(l)
}

function funcUpdateThemaName() {}

function funcUpdateThemaDuration() {}

function funcUpdateThemaTimes() {}

function resizeTextArea(e) {
    e.style.height = "1px", e.style.height = e.scrollHeight + "px"
}

function funcSave() {
    funcUpdateThemaInfor();
    let e = "";
    e += numOfUsers + " ||| " + numOfThemas + " |||\n";
    for (let t = 0; t < numOfThemas; t++) e += themaInfor[t][0] + "||| ", e += themaInfor[t][1] + " ||| ", e += themaInfor[t][2].length + " ||| ", themaInfor[t][2].forEach(t => {
        e += "" + t.getHours() + ":" + t.getMinutes() + " ||| "
    }), e += "\n";
    for (let r = 0; r < numOfUsers; r++) e += document.getElementById("userName" + r).value + "|||";
    e += "\n";
    for (let n = 0; n < numOfThemas; n++) {
        for (let l = 0; l < numOfUsers; l++) e += document.getElementById("sltThema-" + n + "-user-" + l).selectedIndex + " ||| ";
        n < numOfThemas - 1 && (e += "\n")
    }
    document.getElementById("themeInforArea").innerHTML = e, resizeTextArea(document.getElementById("themeInforArea"))
}

function processFile(e) {
    var t = new FileReader;
    t.onload = function() {
        document.getElementById("themeInforArea").value = t.result
    }, t.readAsText(e, "euc-kr")
}

function funcLoad() {
    let e = document.getElementById("themeInforArea").value.split("|||");
    numOfUsers = Number(e[0]), document.getElementById("inputNumOfUsers").value = numOfUsers, numOfThemas = Number(e[1]), document.getElementById("inputNumOfThemas").value = numOfThemas;
    let t = 2;
    funcDrawThemaInforTable();
    for (let r = 0; r < numOfThemas; r++) {
        document.getElementById("themaName" + r).value = e[t++].trim(), document.getElementById("themaDuration" + r).value = e[t++].trim();
        let n = document.getElementById("tr-" + r);
        for (; n.childElementCount > 3;) n.removeChild(n.children[2]);
        let l = Number(e[t++]);
        for (let o = 0; o < l; o++) {
            funcAddTime(document.getElementById("btn" + r));
            let a = e[t++].split(":");
            document.getElementById("startTime-" + r + "-" + o).selectedIndex = 12 * (Number(a[0]) - 9) + Number(a[1]) / 5
        }
    }
    funcUpdateThemaInfor(), funcDrawUserInputTable();
    for (let s = 0; s < numOfUsers; s++) document.getElementById("userName" + s).value = e[t++].trim(), document.getElementById("userName" + s).value = userPicks[s];
    for (let m = 0; m < numOfThemas; m++)
        for (let i = 0; i < numOfUsers; i++) document.getElementById("sltThema-" + m + "-user-" + i).selectedIndex = Number(e[t++]);
    funcDraw()
}

function funcGetTimeFromDate(e) {
    return (e.getHours() >= 10 ? e.getHours() : "0" + e.getHours()) + ":" + (e.getMinutes() >= 10 ? e.getMinutes() : "0" + e.getMinutes())
}

function funcUpdateUserSelectTimeInfor() {
    for (let e = 0; e < numOfThemas; e++) {
        userSelectTimeInfor[e] = [];
        for (let t = 0; t < numOfUsers; t++) userSelectTimeInfor[e][t] = document.getElementById("sltThema-" + e + "-user-" + t).selectedIndex
    }
}

function funcChangeThemaColor(e) {
    selectedThemaColor[e]++, selectedThemaColor[e] == colorRefer.length && (selectedThemaColor[e] = 0), funcDraw()
}
let tableDivStartLoc = 0;

function getRndInteger(e, t) {
    return Math.floor(Math.random() * (t - e)) + e
}
let themaCountPerUser = [],
    coMatrix = [],
    themaMeta = [],
    numOfTwos = [];

function funcDebug() {
    for (let e = 0; e < userSelectTimeInfor[0].length; e++) themaCountPerUser[e] = 0, coMatrix.push([]), numOfTwos[e] = 0;
    for (let t = 0; t < userSelectTimeInfor.length; t++) {
        themaMeta.push([]);
        for (let r = 0; r <= themaInfor[t][2].length; r++) themaMeta[t].push([])
    }
    let n = 0;
    for (let l = 0; l < themaCountPerUser.length && !(3 == themaMeta[n][1].length && ++n >= userSelectTimeInfor.length); l++) {
        userSelectTimeInfor[n][l] = 1, themaCountPerUser[l] += 1;
        for (let o = 0; o < themaMeta[n][1].length; o++) {
            let a = themaMeta[n][1][o],
                s = l;
            s > a && (s = themaMeta[n][1][o], a = l), a in coMatrix[s] ? coMatrix[s][a] += 1 : coMatrix[s][a] = 1
        }
        themaMeta[n][1].push(l)
    }
    funcRecur()
}
let recurCounter = 0;

function funcRecur() {
    ++recurCounter % 1e5 == 0 && console.log(recurCounter);
    let e = !0,
        t = getRndInteger(0, userSelectTimeInfor.length),
        r = getRndInteger(0, userSelectTimeInfor[t].length);
    for (let n = 0; n < themaCountPerUser.length; n++)
        if (4 != themaCountPerUser[n]) {
            themaCountPerUser[n] > 4 && alert("error 1");
            for (let l = 0; l < userSelectTimeInfor.length; l++)
                if (0 == userSelectTimeInfor[l][n]) {
                    let o = !1;
                    for (let a = 1; a <= themaInfor[l][2].length; a++) {
                        o = !1;
                        for (let s = 0; s < numOfThemas; s++)
                            if (s != l && 0 != userSelectTimeInfor[s][n] && !0 == jhOverlapTime([themaInfor[l][2][a - 1], themaInfor[l][3][a - 1]], [themaInfor[s][2][userSelectTimeInfor[s][n] - 1], themaInfor[s][3][userSelectTimeInfor[s][n] - 1]])) {
                                o = !0;
                                break
                            }
                        if (!1 == o) break
                    }
                    if (!0 == o) return !1;
                    t = l, r = n, e = !1
                }
        }
    if (!1 == e) {
        for (let m = 1; m <= themaInfor[t][2].length; m++) {
            if (2966 == ++recurCounter && console.log("here"), 3 == themaMeta[t][m].length) continue;
            themaMeta[t][m].length > 3 && alert("err2");
            let i = !1,
                u = 0;
            for (let f = 0; f < themaMeta[t][m].length; f++) {
                let c = themaMeta[t][m][f],
                    h = r;
                if (h > c && (h = themaMeta[t][m][f], c = r), 1 == coMatrix[h][c] || 1 == coMatrix[h][c] && ((u += 1) >= 2 || 1 == numOfTwos[h] || 1 == numOfTwos[c])) {
                    i = !0;
                    break
                }
            }
            if (!0 != i) {
                userSelectTimeInfor[t][r] = m;
                for (let $ = 0; $ < numOfThemas; $++) {
                    for (let d = $ + 1; d < numOfThemas; d++)
                        if (0 != userSelectTimeInfor[$][r] && 0 != userSelectTimeInfor[d][r] && !0 == jhOverlapTime([themaInfor[$][2][userSelectTimeInfor[$][r] - 1], themaInfor[$][3][userSelectTimeInfor[$][r] - 1]], [themaInfor[d][2][userSelectTimeInfor[d][r] - 1], themaInfor[d][3][userSelectTimeInfor[d][r] - 1]])) {
                            i = !0;
                            break
                        }
                    if (!0 == i) break
                }
                if (!0 == i) userSelectTimeInfor[t][r] = 0;
                else {
                    themaCountPerUser[r] += 1;
                    for (let p = 0; p < themaMeta[t][m].length; p++) {
                        let T = themaMeta[t][m][p],
                            I = r;
                        I > T && (I = themaMeta[t][m][p], T = r), T in coMatrix[I] ? (coMatrix[I][T] += 1, 2 == coMatrix[I][T] && (numOfTwos[I] += 1, numOfTwos[T] += 1)) : coMatrix[I][T] = 1
                    }
                    themaMeta[t][m].push(r);
                    let _ = funcRecur();
                    if (!1 != _) return _;
                    userSelectTimeInfor[t][r] = 0, themaCountPerUser[r] -= 1;
                    themaMeta[t][m].pop() != r && alert("err");
                    for (let g = 0; g < themaMeta[t][m].length; g++) {
                        let y = themaMeta[t][m][g],
                            b = r;
                        b > y && (b = themaMeta[t][m][g], y = r), y in coMatrix[b] ? (coMatrix[b][y] -= 1, 1 == coMatrix[b][y] && (numOfTwos[b] -= 1, numOfTwos[y] -= 1)) : alert("error 3")
                    }
                }
            }
        }
        return !1
    } {
        let E = [],
            C = 0;
        for (let S = 0; S < numOfThemas; S++)
            for (let x = 0; x < numOfUsers; x++)
                if (0 != userSelectTimeInfor[S][x])
                    for (let O = x + 1; O < numOfUsers; O++) userSelectTimeInfor[S][x] == userSelectTimeInfor[S][O] && (void 0 == E[x] && (E[x] = []), void 0 == E[x][O] ? E[x][O] = 1 : E[x][O] += 1, C < E[x][O] && (C = E[x][O]));
        if (C > 2) return !1; {
            funcDraw(!0);
            let M = "";
            for (let v = 0; v < userSelectTimeInfor.length; v++) {
                for (let w = 0; w < userSelectTimeInfor[v].length; w++) M += userSelectTimeInfor[v][w] + " ||| ";
                M += "\n"
            }
            return console.log(M), C
        }
    }
}
let userShow = [];

function funcRandomize() {
    for (let e = 0; e < 1e5; e++) {
        let t = getRndInteger(0, 15),
            r = getRndInteger(0, 15);
        for (let n = 0; n < 4; n++) {
            let l = userSelectTimeInfor[n][t];
            userSelectTimeInfor[n][t] = userSelectTimeInfor[n][r], userSelectTimeInfor[n][r] = l
        }
    }
    let o = "";
    for (let a = 0; a < userSelectTimeInfor.length; a++) {
        for (let s = 0; s < userSelectTimeInfor[a].length; s++) o += userSelectTimeInfor[a][s] + " ||| ";
        o += "\n"
    }
    console.log(o), funcDraw(!0)
}

function funcShowInd(e) {
    if (!0 != userShow[e]) {
        for (let t = 0; t < numOfUsers; t++) userShow[t] = !1;
        userShow[e] = !0;
        for (let r = 0; r < numOfThemas; r++) {
            for (let n = 0; n < numOfUsers; n++) document.getElementById("btnThema_" + n + "_" + r).style.opacity = "10%";
        }
        for (let o = 0; o < numOfThemas; o++) {
            for (let a = 0; a < numOfUsers; a++)
                if (a == e) {
                    let s = document.getElementById("btnThema_" + a + "_" + o);
                    s.style.opacity = "", s.innerHTML += "<br><br>";
                    for (let m = 0; m < numOfUsers; m++) a != m && userSelectTimeInfor[o][e] == userSelectTimeInfor[o][m] && (s.innerHTML += userPicks[m], s.innerHTML += " ")
                } else userSelectTimeInfor[o][e] == userSelectTimeInfor[o][a] && (document.getElementById("btnThema_" + a + "_" + o).style.opacity = "80%");
        }
    } else {
        userShow[e] = !1;
        for (let i = 0; i < numOfThemas; i++) {
            for (let u = 0; u < numOfUsers; u++) {
                let f = document.getElementById("btnThema_" + u + "_" + i);
                f.style.opacity = "";
                let c = f.innerHTML.split("<br>");
                f.innerHTML = c[0] + "<br>" + c[1]
            }
        }
    }
}

function funcRecords() {
    let target = event.target.id
    let input = prompt("남은시간 사용힌트 ex., 10(분) 5(초) 1(힌트)")
    try {
        let words = input.split(' ')
        let min = Number(words[0].trim())
        let sec = Number(words[1].trim())
        let hints = Number(words[2].trim())
        if (min == NaN || sec == NaN || hints == NaN) {
            return
        }
        if (sec >= 60 || sec < 0 || min >= 60 || min < 0 || hints < 0) {
            return
        }
        let rTime = min + ":" + sec
        if (sec < 10) {
            rTime = min + ":0" + sec
        }
        localStorage.setItem("h" + target, hints)
        localStorage.setItem("r" + target, rTime)
        let words2 = event.target.innerHTML.split("<br>")
        event.target.innerHTML = words2[0] + "<br><br>" + words2[2] + "<br><br>L-" + rTime + "<br>H-" + hints
    } catch {
        return
    }
}

function funcDraw(e) {
    !0 != e && funcUpdateUserSelectTimeInfor();
    let t = document.getElementById("tableArea"),
        r = 23,
        n = 9;
    for (let l = 0; l < numOfThemas; l++)
        for (let o = 0; o < themaInfor[l][2].length; o++) themaInfor[l][2][o].getHours() < r && (r = themaInfor[l][2][o].getHours()), themaInfor[l][2][o].getHours() == r && 30 > themaInfor[l][2][o].getMinutes() && (r = themaInfor[l][2][o].getHours() - 1), themaInfor[l][3][o].getHours() + 1 > n && (n = themaInfor[l][3][o].getHours() + 1);
    r += 1, n -= 1;
    let a = new Date(2021, 0, 1, n, 0) - new Date(2021, 0, 1, r, 0);
    for (tableDivStartLoc < t.getBoundingClientRect().y + 50 && (tableDivStartLoc = t.getBoundingClientRect().y + 50); t.hasChildNodes();) t.removeChild(t.firstChild);
    t.style.height = "800px";
    for (let s = r; s <= n; s++) {
        var m = new Date(new Date(2021, 0, 1, r, 0).getTime() + (s - r) * 36e5),
            i = document.createElement("button");
        i.innerHTML = s, i.style.border = "1px dotted", i.style.backgroundColor = "white", i.style.textAlign = "left", i.style.borderBottom = "0px", i.style.verticalAlign = "top", i.style.borderRadius = "0%", i.style.flex = 1, i.style.flexDirection = "column", i.style.position = "absolute", i.style.height = 36e5 / a * 800 + "px", i.style.width = 50 + (numOfThemas + numOfUsers + .7) * 100 + "px", i.style.top = tableDivStartLoc + (m - new Date(2021, 0, 1, r, 0)) / a * 800 + "px", t.appendChild(i)
    }
    let u = themaInfor;
    for (let f = 0; f < u.length; f++) {
        var c = document.createElement("p");
        c.style.border = "1px dotted black", c.style.left = 50 + 100 * f + "px", c.style.width = "90px", c.style.textAlign = "center", c.style.top = tableDivStartLoc - 50 + "px", c.style.position = "absolute", c.style.color = "white", c.style.backgroundColor = colorRefer[selectedThemaColor[f]], c.style.border = "0px", c.style.borderRadius = "5%", c.onclick = function() {
            funcChangeThemaColor(f)
        }, c.innerHTML = u[f][0], t.appendChild(c);
        var h = 6e4 * u[f][1] / a * 800 + "px";
        for (let $ = 0; $ < u[f][2].length; $++) {
            var d = u[f][2][$],
                p = u[f][3][$],
                i = document.createElement("button");
            i.id = "btnHeader_" + f + "_" + $, i.innerHTML = funcGetTimeFromDate(d) + " ~ " + funcGetTimeFromDate(p) + "<br><br>";
            i.onclick = function() { funcRecords() }
            for (let T = 0; T < userSelectTimeInfor[f].length; T++) userSelectTimeInfor[f][T] == $ + 1 && (i.innerHTML += userPicks[T] + " ");

            let remainTime = localStorage.getItem("rbtnHeader_" + f + "_" + $)
            if (remainTime != null) {
                i.innerHTML += "<br><br>L-" + remainTime + "<br>H-" + localStorage.getItem("hbtnHeader_" + f + "_" + $)
            }

            i.style.position = "absolute", i.style.backgroundColor = colorRefer[selectedThemaColor[f]], i.style.color = "white", i.style.border = "0.5px solid", i.style.borderColor = "white", i.style.height = h, i.style.top = tableDivStartLoc + (d - new Date(2021, 0, 1, r, 0)) / a * 800 + "px", i.style.left = 50 + 100 * f + "px", i.style.width = "90px", t.appendChild(i)
        }
    }
    let I = document.createElement("button");
    I.style.position = "absolute", I.style.top = tableDivStartLoc - 50 + "px", I.style.left = 40 + (numOfThemas + 0 + .5) * 100 + "px", I.style.width = 100 * numOfUsers + 10 + "px", I.style.height = 10 + 36e5 / a * 800 * (n - r + 1) + "px", I.style.backgroundColor = "gray", I.style.borderRadius = "0%", I.style.opacity = "0.25", t.appendChild(I);
    for (let _ = 0; _ < numOfUsers; _++) {
        var c = document.createElement("p");
        c.onclick = function() {
            funcShowInd(_)
        }, c.style.border = "1px dotted black", c.style.left = 50 + (numOfThemas + _ + .5) * 100 + "px", c.style.width = "90px", c.style.textAlign = "center", c.style.top = tableDivStartLoc - 50 + "px", c.style.position = "absolute", c.style.border = "0px", c.innerHTML = document.getElementById("userName" + _).value;
        let g = !1;
        for (let y = 0; y < numOfThemas; y++) {
            for (let b = y + 1; b < numOfThemas; b++)
                if (0 != userSelectTimeInfor[y][_] && 0 != userSelectTimeInfor[b][_] && !0 == jhOverlapTime([u[y][2][userSelectTimeInfor[y][_] - 1], u[y][3][userSelectTimeInfor[y][_] - 1]], [u[b][2][userSelectTimeInfor[b][_] - 1], u[b][3][userSelectTimeInfor[b][_] - 1]])) {
                    c.style.backgroundColor = "red", c.style.borderRadius = "10%", c.style.color = "white", g = !0;
                    break
                }
            if (!0 == g) break
        }
        t.appendChild(c);
        for (let E = 0; E < u.length; E++) {
            var h = 6e4 * u[E][1] / a * 800 + "px";
            if (0 != userSelectTimeInfor[E][_]) {
                var d = u[E][2][userSelectTimeInfor[E][_] - 1],
                    p = u[E][3][userSelectTimeInfor[E][_] - 1],
                    i = document.createElement("button");
                i.id = "btnThema_" + _ + "_" + E, i.onclick = function() {
                    funcShowInd(_)
                }, i.innerHTML = u[E][0] + "<br>" + funcGetTimeFromDate(d) + " ~ " + funcGetTimeFromDate(p), i.style.position = "absolute", i.style.color = "white", i.style.backgroundColor = colorRefer[selectedThemaColor[E]], i.style.height = h, i.style.top = tableDivStartLoc + (d - new Date(2021, 0, 1, r, 0)) / a * 800 + "px", i.style.left = 50 + (numOfThemas + _ + .5) * 100 + "px", i.style.width = "90px", t.appendChild(i)
            }
        }
    }
    let C = [];
    for (let S = 0; S < numOfThemas; S++)
        for (let x = 0; x < numOfUsers; x++)
            if (0 != userSelectTimeInfor[S][x])
                for (let O = x + 1; O < numOfUsers; O++) userSelectTimeInfor[S][x] == userSelectTimeInfor[S][O] && (void 0 == C[x] && (C[x] = []), void 0 == C[x][O] ? C[x][O] = 1 : C[x][O]++);
    let M = document.createElement("table");
    M.style.border = "1px solid"; {
        let v = document.createElement("tr");
        v.innerHTML = "<th colspan=100>함께 한 횟수</th>", M.appendChild(v)
    }
    let w = document.createElement("tr"),
        U = document.createElement("th");
    w.appendChild(U);
    for (let k = 0; k < numOfUsers; k++) {
        let B = document.createElement("th");
        B.style.border = "1px solid", B.innerText = document.getElementById("userName" + k).value, w.appendChild(B)
    }
    M.appendChild(w);
    for (let D = 0; D < numOfUsers - 1; D++) {
        let H = document.createElement("tr"),
            L = document.createElement("th");
        L.style.border = "1px solid", L.innerText = document.getElementById("userName" + D).value, H.appendChild(L);
        for (let P = 0; P < numOfUsers; P++) {
            let A = document.createElement("td");
            P > D && (A.style.border = "1px solid"), void 0 != C[D] && void 0 != C[D][P] && (A.innerText = C[D][P]), H.appendChild(A)
        }
        M.appendChild(H)
    }
    M.style.position = "absolute", M.style.top = 1.05 * (tableDivStartLoc - 50 + (10 + 36e5 / a * 800 * (n - r + 1))) + "px", M.style.left = "50px", t.appendChild(M)
}

function saveAsFile(e, t) {
    var r = document.createElement("a");
    r.href = "data:attachment/text," + encodeURI(e), r.target = "_blank", r.download = t, r.click()
}
resizeTextArea(document.getElementById("themeInforArea"));
