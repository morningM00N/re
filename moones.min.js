const NAME = 0,
    DURATION = 1,
    START_TIME = 2,
    END_TIME = 3;
let numOfThemas, numOfUsers, userSelectTimeInfor = [],
    arrStartTimes = [],
    arrMinutes = ["00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55"],
    colorRefer = ["#324856", "#4a746a", "#d18237", "#6a92cc", "#706fab", "#50293c", "#859f3c", "#12406a", "#efb730", "#030305", "#b9cd74"],
    selectedThemaColor = [];
for (let e = 9; e < 23; e++) arrMinutes.forEach(t => { arrStartTimes.push(e + ":" + t) });
let themaInfor = [];

function funcDrawThemaInforTable() { numOfThemas = Number(document.getElementById("inputNumOfThemas").value), selectedThemaColor = []; for (let e = 0; e < numOfThemas; e++) selectedThemaColor[e] = e;
    numOfUsers = Number(document.getElementById("inputNumOfUsers").value); let e = document.getElementById("tblThemaInfor"); for (; e.childElementCount > 0;) e.removeChild(e.childNodes[0]); let t = document.createElement("tr");
    t.innerHTML = "<th rowspan>테마명</th><th >길이(분)</th><th colspan='10'>테마시간</th><th rowspan='4' valign='middle'>&nbsp&nbsp&nbsp&nbsp<button onclick='funcDrawUserInputTable()'>그리기</button></th>", e.appendChild(t); for (let t = 0; t < numOfThemas; t++) { let n = document.createElement("tr");
        n.id = "tr-" + t; let l = document.createElement("td"),
            r = document.createElement("input");
        r.value = "thema_" + t, r.size = 5, r.id = "themaName" + t, r.onchange = function() { funcDrawUserInputTable() }, l.appendChild(r), n.appendChild(l); let o = document.createElement("td"),
            a = document.createElement("input");
        a.value = 60, a.size = 1, a.id = "themaDuration" + t, a.onchange = function() { funcDrawUserInputTable() }, o.appendChild(a), n.appendChild(o); let m = document.createElement("td"),
            u = document.createElement("select");
        u.id = "startTime-" + t + "-0-H", u.onchange = function() { funcUpdateThemaInfor(), funcDrawUserInputTable(), funcDraw() }, u.size = 1; for (let e = 9; e < 24; e++) { let t = document.createElement("option");
            t.innerHTML = e, u.appendChild(t) } let d = document.createElement("select");
        d.id = "startTime-" + t + "-0-M", d.onchange = function() { funcUpdateThemaInfor(), funcDrawUserInputTable(), funcDraw() }, d.size = 1; for (let e = 0; e < arrMinutes.length; e++) { let t = document.createElement("option");
            t.innerHTML = arrMinutes[e], d.appendChild(t) }
        m.appendChild(u), m.appendChild(d), n.appendChild(m); let c = document.createElement("td"),
            s = document.createElement("button");
        s.id = "btn" + t, s.innerHTML = "추가", s.onclick = function() { funcAddTime() }, c.appendChild(s), n.appendChild(c), e.appendChild(n) } }

function jhGetTime(e, t) { return new Date(2021, 0, 1, e, t) }

function jhAddMinutes(e, t) { let n = new Date; return n.setTime(e.getTime() + 60 * t * 1e3), n }

function jhOverlapTime(e, t) { return !(e[1] <= t[0] || t[1] <= e[0]) }

function funcUpdateThemaInfor() { themaInfor = []; for (let e = 0; e < numOfThemas; e++) { let t = {};
        t[NAME] = document.getElementById("themaName" + e).value, t[DURATION] = document.getElementById("themaDuration" + e).value, t[START_TIME] = [], t[END_TIME] = []; for (let n = 0; n < document.getElementById("tr-" + e).childElementCount - 3; n++) { let l = document.getElementById("tr-" + e).children[2 + n].children[0].value,
                r = document.getElementById("tr-" + e).children[2 + n].children[1].value;
            t[START_TIME].push(jhGetTime(l, r)), t[END_TIME].push(jhAddMinutes(t[START_TIME][n], t[DURATION])) }
        themaInfor.push(t) } }

function funcDrawUserInputTable() { funcUpdateThemaInfor(); let e = document.getElementById("tblUserInput"); for (; e.childElementCount > 0;) e.removeChild(e.childNodes[0]); let t = document.createElement("tr"),
        n = document.createElement("th");
    n.style.minWidth = "100px", t.appendChild(n); for (let e = 0; e < numOfUsers; e++) { let n = document.createElement("th"),
            l = document.createElement("input");
        l.id = "userName" + e, l.value = "user_" + "abcdefghijklmnopqrstuvwxyz" [e], l.size = 2, l.style.backgroundColor = "transparent", l.style.border = "0px", l.onchange = function() { funcDraw() }, n.appendChild(l), t.appendChild(n) }
    e.appendChild(t); for (let t = 0; t < numOfThemas; t++) { let n = document.createElement("tr"),
            l = document.createElement("td");
        l.innerText = document.getElementById("themaName" + t).value, l.style.height = "40px", n.appendChild(l); for (let e = 0; e < numOfUsers; e++) { let l = document.createElement("td"),
                r = document.createElement("select");
            r.id = "sltThema-" + t + "-user-" + e, r.onchange = function() { funcDraw(), funcSave(), r.focus() }; let o = document.createElement("option");
            o.innerHTML = "-", r.appendChild(o); for (let e = 0; e < document.getElementById("tr-" + t).childElementCount - 3; e++) { let n = document.createElement("option");
                n.innerText = document.getElementById("tr-" + t).children[2 + e].children[0].value + ":" + document.getElementById("tr-" + t).children[2 + e].children[1].value, r.appendChild(n) }
            l.appendChild(r), n.appendChild(l) }
        e.appendChild(n) }
    funcDraw() }

function funcAddTime(e) { null == e && (e = event.target); let t = e.parentElement,
        n = t.parentElement,
        l = document.createElement("select");
    l.id = "startTime-" + n.id.split("-")[1] + "-" + (n.childElementCount - 3) + "-H", l.onchange = function() { funcUpdateThemaInfor(), funcDrawUserInputTable(), funcDraw() }, l.size = 1; for (let e = 9; e < 24; e++) { let t = document.createElement("option");
        t.innerHTML = e, l.appendChild(t) } let r = document.createElement("select");
    r.id = "startTime-" + n.id.split("-")[1] + "-" + (n.childElementCount - 3) + "-M", r.onchange = function() { funcUpdateThemaInfor(), funcDrawUserInputTable(), funcDraw() }, r.size = 1; for (let e = 0; e < arrMinutes.length; e++) { let t = document.createElement("option");
        t.innerHTML = arrMinutes[e], r.appendChild(t) }
    t.appendChild(l), t.appendChild(r); let o = document.createElement("td");
    o.appendChild(e), n.appendChild(o) }

function funcUpdateThemaName() {}

function funcUpdateThemaDuration() {}

function funcUpdateThemaTimes() {}

function resizeTextArea(e) { e.style.height = "1px", e.style.height = e.scrollHeight + "px" }

function funcSave() { funcUpdateThemaInfor(); let e = "";
    e += numOfUsers + " ||| " + numOfThemas + " |||\n"; for (let t = 0; t < numOfThemas; t++) e += themaInfor[t][NAME] + "||| ", e += themaInfor[t][DURATION] + " ||| ", e += themaInfor[t][START_TIME].length + " ||| ", themaInfor[t][START_TIME].forEach(t => { e += t.getHours() + ":" + t.getMinutes() + " ||| " }), e += "\n"; for (let t = 0; t < numOfUsers; t++) e += document.getElementById("userName" + t).value + "|||";
    e += "\n"; for (let t = 0; t < numOfThemas; t++) { for (let n = 0; n < numOfUsers; n++) e += document.getElementById("sltThema-" + t + "-user-" + n).selectedIndex + " ||| ";
        t < numOfThemas - 1 && (e += "\n") }
    document.getElementById("themeInforArea").innerHTML = e, document.getElementById("themeInforArea").value = e, resizeTextArea(document.getElementById("themeInforArea")), document.getElementById("themeInforArea").select(), document.getElementById("themeInforArea").setSelectionRange(0, 9999999), document.execCommand("copy") }

function processFile(e) { var t = new FileReader;
    t.onload = function() { document.getElementById("themeInforArea").value = t.result }, t.readAsText(e, "euc-kr") }

function funcLoad() { let e = document.getElementById("themeInforArea").value.split("|||");
    numOfUsers = Number(e[0]), document.getElementById("inputNumOfUsers").value = numOfUsers, numOfThemas = Number(e[1]), document.getElementById("inputNumOfThemas").value = numOfThemas; let t = 2;
    funcDrawThemaInforTable(); for (let n = 0; n < numOfThemas; n++) { document.getElementById("themaName" + n).value = e[t++].trim(), document.getElementById("themaDuration" + n).value = e[t++].trim(); let l = document.getElementById("tr-" + n); for (; l.childElementCount > 3;) l.removeChild(l.children[2]); let r = Number(e[t++]); for (let l = 0; l < r; l++) { funcAddTime(document.getElementById("btn" + n)); let r = e[t++].split(":");
            document.getElementById("startTime-" + n + "-" + l + "-H").selectedIndex = Number(r[0]) - 9, document.getElementById("startTime-" + n + "-" + l + "-M").selectedIndex = Number(r[1]) / 5 } }
    funcUpdateThemaInfor(), funcDrawUserInputTable(); for (let n = 0; n < numOfUsers; n++) document.getElementById("userName" + n).value = e[t++].trim(); for (let n = 0; n < numOfThemas; n++)
        for (let l = 0; l < numOfUsers; l++) { document.getElementById("sltThema-" + n + "-user-" + l).selectedIndex = Number(e[t++]) }
    funcDraw() }

function funcGetTimeFromDate(e) { return (e.getHours() >= 10 ? e.getHours() : "0" + e.getHours()) + ":" + (e.getMinutes() >= 10 ? e.getMinutes() : "0" + e.getMinutes()) }

function funcUpdateUserSelectTimeInfor() { for (let e = 0; e < numOfThemas; e++) { userSelectTimeInfor[e] = []; for (let t = 0; t < numOfUsers; t++) userSelectTimeInfor[e][t] = document.getElementById("sltThema-" + e + "-user-" + t).selectedIndex } }

function funcChangeThemaColor(e) { selectedThemaColor[e]++, selectedThemaColor[e] == colorRefer.length && (selectedThemaColor[e] = 0), funcDraw() }
let tableDivStartLoc = 0;

function funcDraw() { funcUpdateUserSelectTimeInfor(); let e = document.getElementById("tableArea"),
        t = 23,
        n = 9; for (let e = 0; e < numOfThemas; e++)
        for (let l = 0; l < themaInfor[e][START_TIME].length; l++) themaInfor[e][START_TIME][l].getHours() < t && (t = themaInfor[e][START_TIME][l].getHours()), themaInfor[e][START_TIME][l].getHours() == t && themaInfor[e][START_TIME][l].getMinutes() < 30 && (t = themaInfor[e][START_TIME][l].getHours() - 1), themaInfor[e][END_TIME][l].getHours() + 1 > n && (n = themaInfor[e][END_TIME][l].getHours() + 1); let l = new Date(2021, 0, 1, n, 0) - new Date(2021, 0, 1, t, 0); for (tableDivStartLoc < e.getBoundingClientRect().y + 50 && (tableDivStartLoc = e.getBoundingClientRect().y + 50); e.hasChildNodes();) e.removeChild(e.firstChild);
    e.style.height = "800px"; for (let o = t; o <= n; o++) { var r = new Date(new Date(2021, 0, 1, t, 0).getTime() + 60 * (o - t) * 60 * 1e3);
        (s = document.createElement("button")).innerHTML = o, s.style.border = "1px dotted", s.style.backgroundColor = "white", s.style.textAlign = "left", s.style.borderBottom = "0px", s.style.verticalAlign = "top", s.style.borderRadius = "0%", s.style.flex = 1, s.style.flexDirection = "column", s.style.position = "absolute", s.style.height = 36e5 / l * 800 + "px", s.style.width = 50 + 90 * (numOfThemas + numOfUsers + .7) + "px", s.style.top = tableDivStartLoc + (r - new Date(2021, 0, 1, t, 0)) / l * 800 + "px", e.appendChild(s) } let o = themaInfor; for (let n = 0; n < o.length; n++) {
        (c = document.createElement("p")).style.border = "1px dotted black", c.style.left = 50 + 90 * n + "px", c.style.width = "81px", c.style.textAlign = "center", c.style.top = tableDivStartLoc - 50 + "px", c.style.position = "absolute", c.style.color = "white", c.style.backgroundColor = colorRefer[selectedThemaColor[n]], c.style.border = "0px", c.style.borderRadius = "5%", c.onclick = function() { funcChangeThemaColor(n) }, c.innerHTML = o[n][0], e.appendChild(c); var a = 60 * o[n][1] * 1e3 / l * 800 + "px"; for (let r = 0; r < o[n][2].length; r++) { var m = o[n][2][r],
                u = o[n][3][r];
            (s = document.createElement("button")).innerHTML = funcGetTimeFromDate(m) + " ~ " + funcGetTimeFromDate(u), s.style.position = "absolute", s.style.backgroundColor = colorRefer[selectedThemaColor[n]], s.style.color = "white", s.style.border = "0.5px solid", s.style.borderColor = "white", s.style.height = a, s.style.top = tableDivStartLoc + (m - new Date(2021, 0, 1, t, 0)) / l * 800 + "px", s.style.left = 50 + 90 * n + "px", s.style.width = "85.5px", e.appendChild(s) } } let d = document.createElement("button");
    d.style.position = "absolute", d.style.top = tableDivStartLoc - 50 + "px", d.style.left = 40 + 90 * (numOfThemas + 0 + .5) + "px", d.style.width = 90 * numOfUsers + 10 + "px", d.style.height = 10 + 36e5 / l * 800 * (n - t + 1) + "px", d.style.backgroundColor = "gray", d.style.borderRadius = "0%", d.style.opacity = "0.25", e.appendChild(d); for (let n = 0; n < numOfUsers; n++) { var c;
        (c = document.createElement("p")).style.border = "1px dotted black", c.style.left = 50 + 90 * (numOfThemas + n + .5) + "px", c.style.width = "85.5px", c.style.textAlign = "center", c.style.top = tableDivStartLoc - 50 + "px", c.style.position = "absolute", c.style.border = "0px", c.innerHTML = document.getElementById("userName" + n).value; let r = !1; for (let e = 0; e < numOfThemas; e++) { for (let t = e + 1; t < numOfThemas; t++)
                if (0 != userSelectTimeInfor[e][n] && 0 != userSelectTimeInfor[t][n] && 1 == jhOverlapTime([o[e][START_TIME][userSelectTimeInfor[e][n] - 1], o[e][END_TIME][userSelectTimeInfor[e][n] - 1]], [o[t][START_TIME][userSelectTimeInfor[t][n] - 1], o[t][END_TIME][userSelectTimeInfor[t][n] - 1]])) { c.style.backgroundColor = "red", c.style.borderRadius = "10%", c.style.color = "white", r = !0; break }
            if (1 == r) break }
        e.appendChild(c); for (let r = 0; r < o.length; r++) { a = 60 * o[r][1] * 1e3 / l * 800 + "px"; if (0 == userSelectTimeInfor[r][n]) continue; let d = 0; for (let e = 0; e < numOfUsers; e++) userSelectTimeInfor[r][n] == userSelectTimeInfor[r][e] && d++; var s;
            m = o[r][2][userSelectTimeInfor[r][n] - 1], u = o[r][3][userSelectTimeInfor[r][n] - 1];
            (s = document.createElement("button")).innerHTML = o[r][NAME] + " (" + d + "명)<br>" + funcGetTimeFromDate(m) + " ~ " + funcGetTimeFromDate(u), s.style.position = "absolute", s.style.color = "white", s.style.backgroundColor = colorRefer[selectedThemaColor[r]], s.style.height = a, s.style.top = tableDivStartLoc + (m - new Date(2021, 0, 1, t, 0)) / l * 800 + "px", s.style.left = 50 + 90 * (numOfThemas + n + .5) + "px", s.style.width = "85.5px", e.appendChild(s) } } let i = []; for (let e = 0; e < numOfThemas; e++)
        for (let t = 0; t < numOfUsers; t++)
            if (0 != userSelectTimeInfor[e][t])
                for (let n = t + 1; n < numOfUsers; n++) userSelectTimeInfor[e][t] == userSelectTimeInfor[e][n] && (null == i[t] && (i[t] = []), null == i[t][n] ? i[t][n] = 1 : i[t][n]++);
    let f = document.createElement("table");
    f.style.border = "1px solid"; { let e = document.createElement("tr");
        e.innerHTML = "<th colspan=100>함께 한 횟수</th>", f.appendChild(e) } let h = document.createElement("tr"),
        p = document.createElement("th");
    h.appendChild(p); for (let e = 0; e < numOfUsers; e++) { let t = document.createElement("th");
        t.style.border = "1px solid", t.innerText = document.getElementById("userName" + e).value, h.appendChild(t) }
    f.appendChild(h); for (let e = 0; e < numOfUsers - 1; e++) { let t = document.createElement("tr"),
            n = document.createElement("th");
        n.style.border = "1px solid", n.innerText = document.getElementById("userName" + e).value, t.appendChild(n); for (let n = 0; n < numOfUsers; n++) { let l = document.createElement("td");
            n > e && (l.style.border = "1px solid"), null != i[e] && null != i[e][n] && (l.innerText = i[e][n]), t.appendChild(l) }
        f.appendChild(t) }
    f.style.position = "absolute", f.style.top = tableDivStartLoc - 50 + (10 + 36e5 / l * 800 * (n - t + 2)) + "px", f.style.left = "50px", e.appendChild(f) }

function saveAsFile(e, t) { var n = document.createElement("a");
    n.href = "data:attachment/text," + encodeURI(e), n.target = "_blank", n.download = t, n.click() }
resizeTextArea(document.getElementById("themeInforArea"));

funcLoad()
